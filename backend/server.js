const express = require("express");
const path = require("path");
const http = require("http");
const dotenv = require("dotenv");
dotenv.config();

const app = express();
const cors = require("cors");
app.use(cors());
const server = http.createServer(app);

// üì¶ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
const db = require("./db");
app.locals.db = db;

// üîÅ –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è has_left
async function autoUpdateHasLeft() {
  try {
    await db.query(`
      UPDATE accommodation
      SET has_left = true
      WHERE left_date < CURRENT_DATE AND has_left = false
    `);
    console.log("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ: has_left –æ–±–Ω–æ–≤–ª—ë–Ω –¥–ª—è –∏—Å—Ç—ë–∫—à–∏—Ö —Å—Ä–æ–∫–æ–≤ –∞—Ä–µ–Ω–¥—ã");
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ has_left:", err.message);
  }
}

// üîå WebSocket
require("./websocket")(server);

// üì¶ Middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// üîÅ API –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è has_left
app.post("/api/update-has-left", async (req, res) => {
  try {
    await autoUpdateHasLeft();
    res.json({ success: true });
  } catch (err) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ has_left:", err.message);
    res.status(500).json({ success: false, error: err.message });
  }
});

// üìÇ –†–æ—É—Ç—ã
const studentsRouter = require("./routes/students");
const roomsRouter = require("./routes/rooms");
const checkIinRoute = require("./routes/checkIin");
const uploadRouter = require("./routes/upload");
const { contractRouter } = require("./routes/generateContract");
const exportExcelRouter = require('./routes/exportExcel');

app.use('/api/export-excel', exportExcelRouter);
app.use(contractRouter);
app.use("/api/check-iin", checkIinRoute);
app.use("/api/students", studentsRouter);
app.use("/api/rooms", roomsRouter);
app.use("/api/upload", uploadRouter);

// üßæ –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ frontend —Ñ–∞–π–ª–æ–≤
app.use(express.static(path.join(__dirname, "../frontend")));

// üåê –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "../frontend/form-personal.html"));
});

// üîó –ö–æ—Ä–æ—Ç–∫–∏–π –ø—É—Ç—å /st ‚Üí statistics.html
app.get("/st", (req, res) => {
  res.sendFile(path.join(__dirname, "../frontend/statistics.html"));
});

// üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –≤—Å–µ—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö (–¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ —Å–µ—Ç–∏)
const PORT = process.env.PORT || 3000;
server.listen(PORT, "0.0.0.0", () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: http://localhost:${PORT} (–∏–ª–∏ http://<—Ç–≤–æ–π-IP>:${PORT})`);
});